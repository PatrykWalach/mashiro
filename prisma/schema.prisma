generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model ServiceEnum {
  id          Int         @id @default(autoincrement())
  value       String      @unique
  accounts    Account[]
  anime       Anime[]
  listEntries ListEntry[]
}

model Account {
  id            Int         @id @default(autoincrement())
  accountUserId Int
  token         String
  service       String
  userId        Int
  serviceEnum   ServiceEnum @relation(fields: [service], references: [value])
  user          User        @relation(fields: [userId], references: [id])
  listEntries   ListEntry[]

  @@unique([service, userId], name: "accountByServiceAndUserId")
}

model Anime {
  id          Int         @id @default(autoincrement())
  anilistUrl  String?
  coverImage  String?
  episodes    Int?
  title       String
  serviceId   Int
  service     String
  serviceEnum ServiceEnum @relation(fields: [service], references: [value])
  listEntries ListEntry[]

  @@unique([serviceId, service], name: "animeByService")
  @@unique([title, service], name: "animeByServiceAndTitle")
}

model StatusEnum {
  id          Int         @id @default(autoincrement())
  value       String      @unique
  listEntries ListEntry[]
}

model ListEntry {
  id          Int         @id @default(autoincrement())
  score       Float       @default(0)
  startedAt   DateTime?
  completedAt DateTime?
  progress    Int         @default(0)
  status      String      @default("CURRENT")
  userId      Int
  accountId   Int
  service     String
  serviceId   Int
  account     Account     @relation(fields: [accountId], references: [id])
  serviceEnum ServiceEnum @relation(fields: [service], references: [value])
  anime       Anime       @relation(fields: [serviceId, service], references: [serviceId, service])
  statusEnum  StatusEnum  @relation(fields: [status], references: [value])
  user        User        @relation(fields: [userId], references: [id])

  @@unique([userId, serviceId, accountId, service], name: "userListEntryByAnimeAndService")
}

model User {
  name                String      @unique
  id                  Int         @id @default(autoincrement())
  preferredRssFeedUri String      @default("https://www.tokyotosho.info/rss.php?filter=1,11&zwnj=0")
  lastLoggedInAt      DateTime    @default(now())
  avatarUrl           String      @default("https://media.tenor.com/images/6e52b53b32029c6351247976a5d1fa3d/tenor.gif")
  accounts            Account[]
  listEntries         ListEntry[]
}
